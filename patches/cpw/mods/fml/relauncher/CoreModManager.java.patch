--- ../src-base/minecraft/cpw/mods/fml/relauncher/CoreModManager.java
+++ ../src-work/minecraft/cpw/mods/fml/relauncher/CoreModManager.java
@@ -150,6 +150,9 @@
 
     }
 
+    // Cauldron - group output of @MCVersion warnings
+    private static List<String> noVersionAnnotationCoreMods = new ArrayList<String>();
+
     public static void handleLaunch(File mcDir, LaunchClassLoader classLoader, FMLTweaker tweaker)
     {
         CoreModManager.mcDir = mcDir;
@@ -210,6 +213,16 @@
         }
         discoverCoreMods(mcDir, classLoader);
 
+        // Cauldron start - group output of @MCVersion warnings
+        if (!noVersionAnnotationCoreMods.isEmpty()) {
+            FMLRelaunchLog.warning("The following coremods do not have a @MCVersion annotation. They may cause problems if this is not the correct version of Minecraft for them.");
+            StringBuilder sb = new StringBuilder("Missing @MCVersion: ");
+            for (String className : noVersionAnnotationCoreMods) {
+                sb.append(className).append("  ");
+            }
+            FMLRelaunchLog.warning(sb.toString());
+        }
+        // Cauldron end
     }
 
     private static void discoverCoreMods(File mcDir, LaunchClassLoader classLoader)
@@ -388,8 +401,11 @@
             MCVersion requiredMCVersion = coreModClazz.getAnnotation(IFMLLoadingPlugin.MCVersion.class);
             if (!Arrays.asList(rootPlugins).contains(coreModClass) && (requiredMCVersion == null || Strings.isNullOrEmpty(requiredMCVersion.value())))
             {
-                FMLRelaunchLog.log(Level.WARN, "The coremod %s does not have a MCVersion annotation, it may cause issues with this version of Minecraft",
-                        coreModClass);
+                // Cauldron - group output of @MCVersion warnings
+                // FMLRelaunchLog.log(Level.WARN, "The coremod %s does not have a MCVersion annotation, it may cause issues with this version of Minecraft",
+                //        coreModClass);
+                noVersionAnnotationCoreMods.add(coreModClass);
+                // Cauldron end
             }
             else if (requiredMCVersion != null && !FMLInjectionData.mccversion.equals(requiredMCVersion.value()))
             {
